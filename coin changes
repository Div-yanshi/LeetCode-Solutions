class Solution {
    public int coinChange(int[] coins, int amount) {
        int n=coins.length;
        int dp[][]=new int[n][amount+1];
        for(int row[]:dp)
        Arrays.fill(row,-1);
        int ans= f(n-1,coins,amount,dp);
        if(ans>=100000000)
        return -1;
        else 
        return ans;
    }
    private static int f(int ind,int[] arr,int sum,int[][] dp)
    {

        if(ind==0)
        if(sum%arr[0]==0)
        return sum/arr[0];
        else
        return 100000000;
        if(dp[ind][sum]!=-1)
        return dp[ind][sum];
          
        int notp=0+f(ind-1,arr,sum,dp);
        int p=Integer.MAX_VALUE;
        if(arr[ind]<=sum)
        p=1+f(ind,arr,sum-arr[ind],dp);
        
        return dp[ind][sum]=Math.min(notp,p);
    }
}
