class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> ans=new ArrayList<>();
        findcomb(0,target,candidates,new ArrayList<>(),ans);
        return ans;
        
        
    }
    private void findcomb(int ind,int t,int[] arr,List<Integer> ds,List<List<Integer>> ans)
    {
        if(ind==arr.length){
        if(t==0)
        {
            ans.add(new ArrayList<>(ds));
            
        }
        return;}
        if(arr[ind]<=t)
        {
            ds.add(arr[ind]);
            findcomb(ind,t-arr[ind],arr,ds,ans);
            ds.remove(ds.size()-1);

        }
        findcomb(ind+1,t,arr,ds,ans);

    }

}
