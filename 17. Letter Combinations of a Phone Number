import java.util.ArrayList;
import java.util.List;

class Solution {
    public List<String> letterCombinations(String digits) {
        List<String> res = new ArrayList<>();
        if (digits.isEmpty()) return res;  // Return empty list if no digits are provided
        pad(res, "", digits);
        return res;
    }
    
    static void pad(List<String> res, String p, String up) {
        if (up.isEmpty()) {
            res.add(p);
            return;
        }
        
        int dig = up.charAt(0) - '0';
        List<String> list = new ArrayList<>();
        
        
        if (dig >= 2 && dig <= 6) {
            for (int i = (dig - 2) * 3; i < (dig - 1) * 3; i++) {
                char ch = (char) ('a' + i);
                pad(res, p + ch, up.substring(1));
            }
        } else if (dig == 7) {
            for (int i = (dig - 2) * 3; i <= (dig - 1) * 3; i++) {
                char ch = (char) ('a' + i);
                pad(res, p + ch, up.substring(1));
            }
        } else if (dig == 8) {
            for (int i = (dig - 2) * 3 + 1; i <= (dig - 1) * 3; i++) {
                char ch = (char) ('a' + i);
                pad(res, p + ch, up.substring(1));
            }
        } else if (dig == 9) {
            for (int i = (dig - 2) * 3 + 1; i <= (dig - 1) * 3 + 1; i++) {
                char ch = (char) ('a' + i);
                pad(res, p + ch, up.substring(1));
            }
        }
    }
}
