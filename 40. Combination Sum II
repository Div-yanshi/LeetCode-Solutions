class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        
    List<List<Integer>> ans=new ArrayList<>();
    Arrays.sort(candidates);
        findcomb(0,target,candidates,new ArrayList<>(),ans);
        return ans;
        
        
    }
    private void findcomb(int ind,int t,int[] arr,List<Integer> ds,List<List<Integer>> ans)
    {
       
        if(t==0)
        {
            ans.add(new ArrayList<>(ds));
            return;
            
        }
        
        for(int i=ind;i<arr.length;i++)
        {
            if(i>ind && arr[i]==arr[i-1])
            continue;
            if(arr[ind]>t)
              break;
        
            ds.add(arr[i]);
            findcomb(i+1,t-arr[i],arr,ds,ans);
            ds.remove(ds.size()-1);

        }
     

    }

}
