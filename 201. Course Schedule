class Solution {
    public boolean canFinish(int V, int[][] pre) {
       ArrayList<ArrayList<Integer>> adj=new ArrayList<>();
      for(int i=0;i<V;i++)
      {
adj.add(new ArrayList<>());
      }
        for(int i=0;i<pre.length;i++)
        {
            adj.get(pre[i][0]).add(pre[i][1]);
        }

       int ind[]=new int[V];
        Queue<Integer> q=new LinkedList<>();
        for(int i=0;i<V;i++)
        {
            for(int it:adj.get(i))
            {
               ind[it]++;
            }
        }
        for(int i=0;i<V;i++)
        {
            if(ind[i]==0)
            q.add(i);
            
        }
       
        int i=0;
        while(!q.isEmpty())
        {
            int node=q.peek();
           i++;
            q.remove();
            for(int it:adj.get(node))
            {
                ind[it]--;
                if(ind[it]==0)
                {
                    q.add(it);
                }
            }
        }
        
        
       if(i==V)
       return true;
       else 
       return false;
        
    }
}
