class Solution {
    public int longestPalindromeSubseq(String s) {
      String s2=reverse(s);
     int n=s.length();
     int m=s2.length();
        
       int dp[][]=new int[n+1][n+1];
       int ans=0;
       
        for(int i=0;i<n;i++)
        dp[i][0]=0;
        for(int j=0;j<n;j++)
        dp[0][j]=0;
        for(int i=1;i<(n+1);i++)
        {
            for(int j=1;j<(m+1);j++)
            {
                if(s.charAt(i-1)==s2.charAt(j-1))
                dp[i][j]=1+dp[i-1][j-1];
                else
                dp[i][j]=Math.max(dp[i-1][j],dp[i][j-1]);
                
            }
        }
        return dp[n][m];}
        private static String reverse(String s1)
        {String s2="";
          for(int i=s1.length()-1;i>=0;i--)
          s2=s2+s1.charAt(i);
          return s2;
        }
        
}
