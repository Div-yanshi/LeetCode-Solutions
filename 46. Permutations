class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans=new ArrayList<>();
        List<Integer> ds=new ArrayList<>();
        boolean vis[]=new boolean[nums.length];      
        recur(nums, 0,vis,ans,ds);
        return ans;
        
    }
    private static void recur(int[] nums, int ind,boolean[] vis,List<List<Integer>> ans,  List<Integer> ds)
      {
        if(ds.size()==nums.length)
        {
            ans.add(new ArrayList<>(ds));
            return;
        }
        for(int i=0;i<nums.length;i++){
            if(!(vis[i]))
            {
                vis[i]=true;
                ds.add(nums[i]);
                recur(nums, ind+1,vis,ans,ds);
                vis[i]=false;
                ds.remove(ds.size()-1);
            }
        }


      }


}

